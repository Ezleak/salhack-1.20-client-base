package me.ionar.salhack.module.exploit;

import com.google.common.eventbus.Subscribe;
import me.ionar.salhack.events.network.EventNetworkPacketEvent;
import me.ionar.salhack.module.Module;
import me.ionar.salhack.module.Value;
import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerInteractItemC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.text.Text;
import net.minecraft.util.Hand;

public class BowbombModule extends Module
{

    public final Value<Boolean> Bows = new Value<Boolean>("Bows", new String[] { "Bows" }, "Bow arrow acceleration", true);
    public final Value<Boolean> Pearls = new Value<Boolean>("Pearls", new String[] { "Pearls" }, "Pearls acceleration", true);
    public final Value<Boolean> Eggs = new Value<Boolean>("Eggs", new String[] { "Eggs" }, "Eggs acceleration", true);
    public final Value<Boolean> Snowballs = new Value<Boolean>("Snowballs", new String[] { "Snowballs" }, "Snowballs acceleration", true);
    public final Value<Boolean> Trident = new Value<Boolean>("Trident", new String[] { "Trident" }, "Trident acceleration", true);
    public final Value<Integer> Timeout = new Value<Integer>("Timeout", new String[] {"Timeout"}, "Timeout", 5000, 100, 20000, 100);
    public final Value<Integer> Spoofs = new Value<Integer>("Spoofs", new String[] {"Spoofs"}, "Spoofs", 100, 1, 300, 1);
    public final Value<Boolean> Bypass = new Value<Boolean>("Bypass", new String[] { "Bypass" }, "Allow bypass some servers", false);

    private static long lastShootTime;

    public BowbombModule()
    {
        super("Bowbomb", new String[]
                { "BS" }, "Alow shot players with bow", 0, 0xF2190E, ModuleType.EXPLOIT);
    }

    @EventHandler
    private Listener<EventNetworkPacketEvent> PacketEvent = new Listener<>(p_Event ->
    {
        if (p_Event.getPacket() instanceof PlayerActionC2SPacket) { //CPacketPlayerDigging
            PlayerActionC2SPacket packet = (PlayerActionC2SPacket) p_Event.getPacket();

            if (packet.getAction() == PlayerActionC2SPacket.Action.RELEASE_USE_ITEM) {
                //ItemStack handStack = mc.player.getHeldItem(EnumHand.MAIN_HAND);
                ItemStack handStack = mc.player.getMainHandStack();

                if (!handStack.isEmpty() && handStack.getItem() != null && handStack.getItem() == Items.BOW && Bows.getValue()) {
                    doSpoofs();
                }else if (handStack.getItem() == Items.TRIDENT && Trident.getValue()) {
                    doSpoofs();
                }
            }

        } else if (p_Event.getPacket() instanceof PlayerInteractItemC2SPacket) {
            PlayerInteractItemC2SPacket packet2 = (PlayerInteractItemC2SPacket) p_Event.getPacket();

            if (packet2.getHand() == Hand.MAIN_HAND) {
                ItemStack handStack = mc.player.getMainHandStack();

                if (!handStack.isEmpty() && handStack.getItem() != null) {
                    if (handStack.getItem() == Items.EGG && Eggs.getValue()) {
                        doSpoofs();
                    } else if (handStack.getItem() == Items.ENDER_PEARL && Pearls.getValue()) {
                        doSpoofs();
                    } else if (handStack.getItem() == Items.SNOWBALL && Snowballs.getValue()) {
                        doSpoofs();
                    }
                }
            }
        }
    });

    private void doSpoofs() {
        if (System.currentTimeMillis() - lastShootTime >= Timeout.getValue()) {
            lastShootTime = System.currentTimeMillis();

            mc.player.networkHandler.sendPacket(new ClientCommandC2SPacket(mc.player, ClientCommandC2SPacket.Mode.START_SPRINTING));

            for (int index = 0; index < Spoofs.getValue(); ++index) {
                if (Bypass.getValue()) {
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 1e-10, mc.player.getZ(), false));
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() - 1e-10, mc.player.getZ(), true));
                } else {
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() - 1e-10, mc.player.getZ(), true));
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 1e-10, mc.player.getZ(), false));
                }
            }
            mc.player.sendMessage(Text.of("spoof"));
        }
    }
}
